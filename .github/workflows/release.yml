name: Release
on:
    push:
        tags: ['v*']
    workflow_dispatch:

jobs:
    create-release:
        permissions:
            contents: write
        runs-on: ubuntu-22.04
        outputs:
            release_id: ${{ steps.create-release.outputs.result }}

        steps:
            - uses: actions/checkout@v4
            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: get version
              run: echo "PACKAGE_VERSION=$(node -pe "require('./package.json').version")" >> $GITHUB_ENV
            - name: create release
              id: create-release
              uses: actions/github-script@v7
              with:
                  script: |
                      const { data } = await github.rest.repos.createRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag_name: `v${process.env.PACKAGE_VERSION}`,
                        name: `DayFlow v${process.env.PACKAGE_VERSION}`,
                        body: 'Cross-platform installers for Windows, macOS, and Linux.',
                        draft: true,
                        prerelease: false
                      })
                      return data.id

    build-tauri:
        needs: create-release
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest'
                      args: '--target universal-apple-darwin'
                    - platform: 'ubuntu-22.04'
                      args: ''
                    - platform: 'windows-latest'
                      args: ''

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: setup bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install frontend dependencies
              run: bun install

            - name: build frontend
              env:
                  TAURI_ENV: true
              run: bun run build

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  releaseId: ${{ needs.create-release.outputs.release_id }}
                  args: ${{ matrix.args }}

    publish-release:
        permissions:
            contents: write
        runs-on: ubuntu-22.04
        needs: [create-release, build-tauri]
        steps:
            - name: publish release
              uses: actions/github-script@v7
              env:
                  release_id: ${{ needs.create-release.outputs.release_id }}
              with:
                  script: |
                      github.rest.repos.updateRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        release_id: process.env.release_id,
                        draft: false,
                        prerelease: false
                      })
